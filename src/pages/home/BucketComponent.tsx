import { useState } from 'react';
import { useNavigate } from 'react-router-dom';

interface BucketItem {
  title: string;
  description: string;
}

const bucketItems: BucketItem[] = [
  {
    title: 'ÎπÑ Ïò§Îäî ÎÇ† Ìè¨Ïû•ÎßàÏ∞® Í∞ÄÍ∏∞üéâ',
    description:
      'ÎπÑ Ïò§Îäî ÎÇ† ÎÇ≠Îßå Í∞ÄÎìùÌïòÍ≤å Ìè¨Ïû•ÎßàÏ∞®ÏóêÏÑú ÏÜåÏ£º ÎìúÏã§ Î∂Ñ Ï™ΩÏßÄ Ï£ºÏÑ∏Ïöî~',
  },
  {
    title: 'ÌïúÍ∞ïÏóêÏÑú Ï∫îÎß• ÎßàÏãúÍ∏∞',
    description:
      'ÏïÑÏßÅ ÌïúÍ∞ïÏóêÏÑú Ï∫îÎß•Ï£ºÎ•º Ïïà ÎßàÏÖîÎ¥§ÎÑ§Ïöî,, Ï†ÄÎûë Í∞ôÏù¥ ÌïúÍ∞ï Í∞ÄÏã§Î∂Ñ?!',
  },
  {
    title: 'Î∞§Ïóê ÎèóÏûêÎ¶¨ Îì§Í≥† ÌïòÎäò Ïûò Î≥¥Ïù¥Îäî ÏûîÎîîÎ∞≠ Ï∞æÏïÑ ÎàÑÏõåÏÑú Î≥Ñ Î≥¥Í∏∞',
    description: 'ÎèóÏûêÎ¶¨ÎèÑ Ï†úÍ∞Ä Îì§Í≥† Í∞ëÎãàÎã§ „Öé„Öé ÎÇ≠Îßå Ï∞æÏïÑÎ¥ê~',
  },
  {
    title: 'Î≤àÏßÄ Ï†êÌîÑ ÎèÑÏ†Ñ!!',
    description: 'ÌòºÏûê ÎèÑÏ†ÑÌïòÍ∏∞Îäî Î¨¥ÏÑúÏõåÏÑú..! Í∞ôÏù¥ ÎèÑÏ†ÑÌï¥Î¥êÏöî..!!!!!',
  },
  {
    title: 'Ïò•ÏÉÅÏóêÏÑú ÏïºÍ≤ΩÎ≥¥Î©∞ Îß•Ï£º ÌïúÏûîüç∫',
    description: 'Îß•Ï£º Ï¢ãÏïÑÌï©ÎãàÎã§. Îß•Ï£º Ï¢ãÏïÑÌïòÏãúÎäî Î∂Ñ Ï∞æÏïÑÏöî.',
  },
  {
    title: 'Î™©Ï†ÅÏßÄ ÏóÜÏù¥ ÎìúÎùºÏù¥Î∏å',
    description:
      'ÏèòÏπ¥Î°ú Ï∞® ÎπåÎ†§ÏÑú Î¨¥ÏûëÏ†ï Ï∞ΩÎ¨∏ Ïó¥Í≥† ÎìúÎùºÏù¥Î∏å Ìï¥Î≥¥ÎäîÍ≤å Ï†ú Î≤ÑÌÇ∑Î¶¨Ïä§Ìä∏ÏûÖÎãàÎã§! Ï†Ä Ïö¥Ï†Ñ ÏûòÌïòÎäîÎç∞ Ìï®ÍªòÌïòÏã§ Î∂Ñ?',
  },
  {
    title: 'Î™©Ï†ÅÏßÄ ÏóÜÏù¥ ÎìúÎùºÏù¥Î∏å',
    description:
      'ÏèòÏπ¥Î°ú Ï∞® ÎπåÎ†§ÏÑú Î¨¥ÏûëÏ†ï Ï∞ΩÎ¨∏ Ïó¥Í≥† ÎìúÎùºÏù¥Î∏å Ìï¥Î≥¥ÎäîÍ≤å Ï†ú Î≤ÑÌÇ∑Î¶¨Ïä§Ìä∏ÏûÖÎãàÎã§! Ï†Ä Ïö¥Ï†Ñ ÏûòÌïòÎäîÎç∞ Ìï®ÍªòÌïòÏã§ Î∂Ñ?',
  },
  {
    title: 'Î™©Ï†ÅÏßÄ ÏóÜÏù¥ ÎìúÎùºÏù¥Î∏å',
    description:
      'ÏèòÏπ¥Î°ú Ï∞® ÎπåÎ†§ÏÑú Î¨¥ÏûëÏ†ï Ï∞ΩÎ¨∏ Ïó¥Í≥† ÎìúÎùºÏù¥Î∏å Ìï¥Î≥¥ÎäîÍ≤å Ï†ú Î≤ÑÌÇ∑Î¶¨Ïä§Ìä∏ÏûÖÎãàÎã§! Ï†Ä Ïö¥Ï†Ñ ÏûòÌïòÎäîÎç∞ Ìï®ÍªòÌïòÏã§ Î∂Ñ?',
  },
  {
    title: 'Î™©Ï†ÅÏßÄ ÏóÜÏù¥ ÎìúÎùºÏù¥Î∏å',
    description:
      'ÏèòÏπ¥Î°ú Ï∞® ÎπåÎ†§ÏÑú Î¨¥ÏûëÏ†ï Ï∞ΩÎ¨∏ Ïó¥Í≥† ÎìúÎùºÏù¥Î∏å Ìï¥Î≥¥ÎäîÍ≤å Ï†ú Î≤ÑÌÇ∑Î¶¨Ïä§Ìä∏ÏûÖÎãàÎã§! Ï†Ä Ïö¥Ï†Ñ ÏûòÌïòÎäîÎç∞ Ìï®ÍªòÌïòÏã§ Î∂Ñ?',
  },

  {
    title: 'Î™©Ï†ÅÏßÄ ÏóÜÏù¥ ÎìúÎùºÏù¥Î∏å',
    description:
      'ÏèòÏπ¥Î°ú Ï∞® ÎπåÎ†§ÏÑú Î¨¥ÏûëÏ†ï Ï∞ΩÎ¨∏ Ïó¥Í≥† ÎìúÎùºÏù¥Î∏å Ìï¥Î≥¥ÎäîÍ≤å Ï†ú Î≤ÑÌÇ∑Î¶¨Ïä§Ìä∏ÏûÖÎãàÎã§! Ï†Ä Ïö¥Ï†Ñ ÏûòÌïòÎäîÎç∞ Ìï®ÍªòÌïòÏã§ Î∂Ñ?',
  },
  {
    title: 'Î™©Ï†ÅÏßÄ ÏóÜÏù¥ ÎìúÎùºÏù¥Î∏å',
    description:
      'ÏèòÏπ¥Î°ú Ï∞® ÎπåÎ†§ÏÑú Î¨¥ÏûëÏ†ï Ï∞ΩÎ¨∏ Ïó¥Í≥† ÎìúÎùºÏù¥Î∏å Ìï¥Î≥¥ÎäîÍ≤å Ï†ú Î≤ÑÌÇ∑Î¶¨Ïä§Ìä∏ÏûÖÎãàÎã§! Ï†Ä Ïö¥Ï†Ñ ÏûòÌïòÎäîÎç∞ Ìï®ÍªòÌïòÏã§ Î∂Ñ?',
  },
]; //ÎçîÎØ∏Îç∞Ïù¥ÌÑ∞

const BucketComponent = () => {
  const navigate = useNavigate();
  const [popupData, setPopupData] = useState<BucketItem | null>(null);
  const [isPopupVisible, setIsPopupVisible] = useState(false);

  const handleIconClick = () => {
    navigate('/letter'); // Ïó∞Í≤∞ ÎßÅÌÅ¨ ÏàòÏ†ï ÌïÑÏöî
  };

  const handleItemClick = (item: BucketItem) => {
    setPopupData(item);
    setIsPopupVisible(true);
  };

  const closePopup = () => {
    setIsPopupVisible(false);
    setPopupData(null);
  };

  return (
    <div className="flex justify-center items-center h-full">
      <div>
        <div className="flex flex-wrap mobile:gap-2 tablet:gap-2 gap-4 justify-center ">
          {bucketItems.map((item, index) => (
            <div
              key={index}
              className="bg-white shadow-md rounded-lg p-4 flex flex-col justify-between mobile:w-1/2 mobile:min-w-[150px] mobile:max-w-[150px] tablet:min-w-[300px] tablet:max-w-[300px] min-w-[300px] max-w-[300px] min-h-[150px] mb-4 hover:-translate-y-6 hover:transition-transform duration-300 cursor-pointer "
              onClick={() => handleItemClick(item)}
            >
              <div>
                <h3 className="mobile:text-sm tablet:text-lg font-semibold mb-2 ">
                  {item.title}
                </h3>
                <p className="text-gray-600 tablet:text-lg mobile:text-xs">
                  {item.description}
                </p>
              </div>
              <i
                className="fa-solid fa-envelope self-end mt-2 text-deep text-2xl hover:-translate-y-2 mobile:text-lg"
                onClick={handleIconClick}
              ></i>
            </div>
          ))}
        </div>
      </div>

      {isPopupVisible &&
        popupData && ( //ÌåùÏóÖ
          <div className="fixed inset-0 flex items-center justify-center z-50">
            <div
              className="absolute inset-0 bg-black opacity-50"
              onClick={closePopup}
            ></div>
            <div
              id="popup"
              className="absolute w-96 h-2/5 bg-[#dddddd] rounded-3xl shadow-lg flex flex-col items-start justify-start px-12 pt-20 mobile:w-80"
            >
              <button
                className="absolute top-2 right-2 text-gray-600 hover:text-gray-800 "
                onClick={closePopup}
              >
                <i className="fa-solid fa-xmark"></i>
              </button>
              <h3 className="text-lg font-semibold mb-2 mb-4 text-left mobile:text-base">
                {popupData.title}
              </h3>
              <p className="text-gray-600 mobile:text-sm">
                {popupData.description}
              </p>
            </div>
          </div>
        )}
    </div>
  );
};

export default BucketComponent;
